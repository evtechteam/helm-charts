{{- range $name, $overrides := .Values.instances }}
{{- $settings := mustMergeOverwrite (dict) (deepCopy $.Values.defaults) $overrides}}
{{- $ctx := dict "name" $name "Release" $.Release "Values" $.Values }}
{{- $resourceName := include "node-red-gitops.resourceName" $ctx }}
{{- $_ := set $ "name" $name }}
{{- $_ := set $ "ingress" $settings.ingress }}
{{- if $settings.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: '{{ $resourceName }}'
  labels:
    app.kubernetes.io/instance: '{{ $name }}'
    app.kubernetes.io/name: '{{ $resourceName }}'
{{- if $settings.ingress.labels }}
  {{- range $key, $value := $settings.ingress.labels }}
    {{ $key }}: {{ $value | squote }}
  {{- end }}
{{- end }}
{{- if $settings.ingress.annotations }}
  annotations:
  {{- range $key, $value := $settings.ingress.annotations }}
    {{ $key }}: {{ $value | squote }}
  {{- end }}
{{- end }}
spec:
  rules:
  {{- if $settings.ingress.template }}
    - host: {{ tpl $settings.ingress.template (dict "name" $name "ingress" $settings.ingress "Template" $.Template "Release" $.Release) }}
  {{- else -}}
    - host: {{ $settings.ingress.hostname | default (printf "%s%s" $name $settings.ingress.suffix) | quote }}
  {{- end }}
      http:
        paths:
          - backend:
              service:
                name: '{{ $resourceName }}'
                port:
                  number: 1880
            path: /
            pathType: Prefix

{{- end -}}
{{- end -}}
